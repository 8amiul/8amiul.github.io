<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>8amiul&#39;s Webpage</title>
    <link>https://8amiul.github.io/</link>
    <description>Recent content on 8amiul&#39;s Webpage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Jan 2025 22:06:00 +0600</lastBuildDate>
    
	<atom:link href="https://8amiul.github.io/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Termus</title>
      <link>https://8amiul.github.io/projects/termus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://8amiul.github.io/projects/termus/</guid>
      <description>&lt;h1 id=&#34;httpsgithubcom8amiultermus&#34;&gt;&lt;a href=&#34;https://github.com/8amiul/termus&#34;&gt;https://github.com/8amiul/termus&lt;/a&gt;&lt;/h1&gt;
&lt;h4 id=&#34;video-demo-httpsyoutubegzhtsferqzu&#34;&gt;Video Demo: &lt;a href=&#34;https://youtu.be/GzHTSfeRQZU&#34;&gt;https://youtu.be/GzHTSfeRQZU&lt;/a&gt;&lt;/h4&gt;
&lt;h2 id=&#34;description&#34;&gt;Description:&lt;/h2&gt;
&lt;p&gt;Termus is a terminal based music player written in C using SDL_mixer and ncurses library.&lt;/p&gt;
&lt;h2 id=&#34;files&#34;&gt;Files:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;main.c&lt;/code&gt;  : initialize libraries and functions are called&lt;/li&gt;
&lt;li&gt;&lt;code&gt;termus.c&lt;/code&gt;: Manage keystrokes, free up memory and helping functions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file.c&lt;/code&gt;  : Manages directories, scan music and prepares music files for playing&lt;/li&gt;
&lt;li&gt;&lt;code&gt;video.c&lt;/code&gt; : Functions regarding displaying windows and playing music&lt;/li&gt;
&lt;li&gt;&lt;code&gt;termes.h&lt;/code&gt;: A header file containing functon declaration and structs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;used-libraries&#34;&gt;Used Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SDL2 &amp;amp; SDL2_mixer&lt;/code&gt;: SDL2_mixer is used for audio and music management&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ncurses&lt;/code&gt;: For displaying windows and text&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;
&lt;h3 id=&#34;termusc&#34;&gt;&lt;code&gt;termus.c&lt;/code&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;highlight, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; j, getMusic_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; getMusicP, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WIN_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; window, Mix_Music&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; musicSDL, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; volume, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; curPlaying_music)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt;: takes user key press. every key input is saved in &amp;lsquo;c&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;highlight&lt;/code&gt; is the variable which is limited. it keeps the index number of highligted song on the screen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getMusicP&lt;/code&gt; here is used to get the total number of music and getting the music file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;window&lt;/code&gt; is used to get the current height of &lt;code&gt;window[1]&lt;/code&gt;. &lt;code&gt;window[0]&lt;/code&gt; is the upper and &lt;code&gt;window[1]&lt;/code&gt; is the lower window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;musicSDL&lt;/code&gt; holds the loaded music. So most of the SDL_mixer function is used using it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;volume&lt;/code&gt; gets the current volume&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curPlaying_music&lt;/code&gt; holds the index number of music playing of &lt;code&gt;MUSIC_STRUCT&lt;/code&gt; elements &lt;code&gt;(getMusicP-&amp;gt;mus[*curPlaying_music].path)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;freeTermus&lt;/span&gt;(getMusic_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; getMusicP)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;freeTerumus function frees all the allocated memory using malloc. Most of the work is connected with &lt;code&gt;getMusic_STRUCT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;compfn&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; m1, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; m2)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;compfn&lt;/code&gt; function is used in &lt;code&gt;sortList()&lt;/code&gt; function. it is a function not used in anywhere else than &lt;code&gt;compfn&lt;/code&gt;. it compares two string and help &lt;code&gt;qsort&lt;/code&gt; to sort the &lt;code&gt;getMusicP&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sortList&lt;/span&gt;(getMusic_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; getMusicP)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sortList&lt;/code&gt; a function is used to sort &lt;code&gt;getMusicP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;videoc&#34;&gt;&lt;code&gt;video.c&lt;/code&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printMusicList&lt;/span&gt;(WIN_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; window, getMusic_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; getMusicP, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; j, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; highlight, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; old_h1)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;printMusicList&lt;/code&gt; function prints the list and display it in &lt;code&gt;window[1]&lt;/code&gt;. It could simply print strings. But it converts it to &lt;code&gt;wchar_t&lt;/code&gt; just to print wide characters. It wrap text so changing display size would wrap those lines which are larger then screen size.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;playbackDuration&lt;/span&gt;(WIN_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; window, Mix_Music&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; musicSDL)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;It prints the progress time and duration in &lt;code&gt;window[0]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printProgressbar&lt;/span&gt;(WIN_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; window, Mix_Music&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; musicSDL)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;printProgressbar&lt;/code&gt; prints the progress bar in &lt;code&gt;window[0]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;display&lt;/span&gt;(WIN_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; window, getMusic_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; getMusicP, Mix_Music&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; musicSDL)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;main loop for display and run operate video and music task&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WIN_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initScreen&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;initialize curses and return &lt;code&gt;WIN_STRUCT*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;filec&#34;&gt;&lt;code&gt;file.c&lt;/code&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;getMusic_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getMusic&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;getMusic function gets all the information needed for loading music&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getDIR&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; listDIR)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;this function read config file for directories or check the program arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;concat&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dir, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; musicFile, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; path)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Merging music file with the path so that it can be used while loading music&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scanMusic&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; DIRs, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; totalDIR, MUSIC_STRUCT&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; music)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;scan for music files on directories&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-use-this-program&#34;&gt;How to use this program?&lt;/h2&gt;
&lt;p&gt;First it has to compile for the system. using &lt;code&gt;make&lt;/code&gt; this program can be compiled on linux.
For windows SDL2 library and ncurses is necessary for compiling. One can provide directories to scan by giving it to the program argument or putting it in
&lt;code&gt;termus.conf&lt;/code&gt; file. After that running that program will start the program and a menu should be visible.&lt;/p&gt;
&lt;h2 id=&#34;known-bugstodo&#34;&gt;Known bugs/Todo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Resizing terminal the selection bar goes out of the screen.&lt;/li&gt;
&lt;li&gt;On windows resizing terminal breaks the screen.&lt;/li&gt;
&lt;li&gt;Volume isn&amp;rsquo;t capped at 100&lt;/li&gt;
&lt;/ul&gt;
</description> 
    </item>
    
    <item>
      <title>Thedailystar-CLI</title>
      <link>https://8amiul.github.io/projects/thedailystar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://8amiul.github.io/projects/thedailystar/</guid>
      <description>&lt;h1 id=&#34;httpsgithubcom8amiulthedailystar-cli&#34;&gt;&lt;a href=&#34;https://github.com/8amiul/Thedailystar-CLI&#34;&gt;https://github.com/8amiul/Thedailystar-CLI&lt;/a&gt;&lt;/h1&gt;
&lt;h4 id=&#34;video-demo-httpsyoutube5tp4xeqnlec&#34;&gt;Video Demo: &lt;a href=&#34;https://youtu.be/5Tp4xeqNLEc&#34;&gt;https://youtu.be/5Tp4xeqNLEc&lt;/a&gt;&lt;/h4&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;Thedailystar-CLI is a terminal based program written in python for CS50&amp;rsquo;s Introduction to Programming with Python. This program does scrape news from &lt;a href=&#34;https://www.thedailystar.net/&#34;&gt;The Daily Star&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;files&#34;&gt;Files&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;project.py&lt;/code&gt;: The main program.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test_project.py&lt;/code&gt;: To test &lt;code&gt;project.py&lt;/code&gt; using pytest.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;used-libraries&#34;&gt;Used Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BeautifulSoup4&lt;/code&gt;: For scraping data from &lt;a href=&#34;https://www.thedailystar.net/&#34;&gt;The Daily Star&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curses&lt;/code&gt;: For handling keyboard input and user interface.&lt;/li&gt;
&lt;li&gt;&lt;code&gt; requests&lt;/code&gt;: For sending HTTP requests.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pytest&lt;/code&gt;:  For testing functions built in program&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;about-functions&#34;&gt;About Functions&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;(stdscr, test_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function shows the start menu. It does have 2 options, News and Exit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stdscr&lt;/code&gt;: Is the curses window. Which is initialized in the main function.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test_&lt;/code&gt;: Is used for unit testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;get_news_lines&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function scrapes latest news from &lt;a href=&#34;https://www.thedailystar.net/todays-news&#34;&gt;Latest News&lt;/a&gt; and return the headlines including links in a dictionary.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;select_news&lt;/span&gt;(scr,news_data: dict, test_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function allows a user to choose a news.  It returns the selected news and total displayed lines.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scr&lt;/code&gt;: Is the screen window.&lt;/li&gt;
&lt;li&gt;&lt;code&gt; news_data&lt;/code&gt;:  Is the returned list from &lt;code&gt;get_news_lines(args)&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test_&lt;/code&gt;: For unit testing&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;get_news&lt;/span&gt;(news_dict: dict, news_lines_list: list, selected_news: int):
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function get the link and scrape the news paragraph from the website. and separate the headline and put all the news paragraph lines into a list. It returns headline as string and news paragraph as list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;news_dict: It grabs the titles and links as news_dict which is a returned value of &lt;code&gt;get_news_lines(args)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;news_lines_list: The total displayed lines.&lt;/li&gt;
&lt;li&gt;selected_news: It returns the position of selected line. Which needs to used in news_lines_list to get the expected news.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;show_news&lt;/span&gt;(scr, hl: str, n_p: list, test_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function is responsible for showing the whole news paragraph including title on top. It doesn&amp;rsquo;t return anything.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hl&lt;/code&gt;: Is the headline which is from &lt;code&gt;get_news(args)&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;n_p : Is the news paragraph as a list from &lt;code&gt;get_news(args)&lt;/code&gt; function.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-the-program-works&#34;&gt;How the program works?&lt;/h2&gt;
&lt;p&gt;At first the main function will sequentially call other functions. Inside the main function it will call &lt;code&gt;menu(args)&lt;/code&gt; where selection between menu or exit will be returned. If returned value is news then &lt;code&gt;get_news_lines(args)&lt;/code&gt;  will be called and from &lt;a href=&#34;https://www.thedailystar.net/todays-news&#34;&gt;Latest News&lt;/a&gt; all news will be scraped and the data would be in a dictionary(which will be returned). By using the dictionary user will get a chance to select a news. The selected news will go through &lt;code&gt;get_news(args)&lt;/code&gt; and it will use BeautifulSoup4 to scrape headline and the whole news from the website. Finally &lt;code&gt;show_news(args)&lt;/code&gt; will modify the headline and news paragraph. The modification will effect the size of text per line subject to the height and weight of the terminal screen. At the end of the program the curses module will call the main function inside curses.wrapper().&lt;/p&gt;
</description> 
    </item>
    
    <item>
      <title>Apps That I Use</title>
      <link>https://8amiul.github.io/posts/apps-that-i-use/</link>
      <pubDate>Sun, 12 Jan 2025 22:06:00 +0600</pubDate>
      
      <guid>https://8amiul.github.io/posts/apps-that-i-use/</guid>
      <description>&lt;h2 id=&#34;apps-that-i-use&#34;&gt;&lt;em&gt;Apps that I use&lt;/em&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;android&#34;&gt;&lt;em&gt;Android&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Auxio&lt;/li&gt;
&lt;li&gt;Simplenote&lt;/li&gt;
&lt;li&gt;Bitwarden&lt;/li&gt;
&lt;li&gt;Feeder&lt;/li&gt;
&lt;li&gt;Freebasics&lt;/li&gt;
&lt;li&gt;JuiceSSH&lt;/li&gt;
&lt;li&gt;Microsoft Lens&lt;/li&gt;
&lt;li&gt;NotificationLog&lt;/li&gt;
&lt;li&gt;Shazam&lt;/li&gt;
&lt;li&gt;Adaway&lt;/li&gt;
&lt;li&gt;Termux&lt;/li&gt;
&lt;li&gt;Audiorelay&lt;/li&gt;
&lt;li&gt;Drivedroid&lt;/li&gt;
&lt;li&gt;Droidcam&lt;/li&gt;
&lt;li&gt;Lawnchair&lt;/li&gt;
&lt;li&gt;Magisk&lt;/li&gt;
&lt;li&gt;Quick switch&lt;/li&gt;
&lt;li&gt;Readera&lt;/li&gt;
&lt;li&gt;V4a&lt;/li&gt;
&lt;li&gt;AntennaPod&lt;/li&gt;
&lt;li&gt;NewPipe&lt;/li&gt;
&lt;li&gt;VLC Media Player&lt;/li&gt;
&lt;li&gt;LSPosed&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;desktop&#34;&gt;&lt;em&gt;Desktop&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;Krita&lt;/li&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;VScode&lt;/li&gt;
&lt;li&gt;Proxifier&lt;/li&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;li&gt;PCSX2&lt;/li&gt;
&lt;li&gt;PotPlayer&lt;/li&gt;
&lt;li&gt;VLC media player&lt;/li&gt;
&lt;li&gt;Avro Keyboard&lt;/li&gt;
&lt;li&gt;OBS&lt;/li&gt;
&lt;li&gt;qBittorrent&lt;/li&gt;
&lt;li&gt;Discord&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;li&gt;Steam&lt;/li&gt;
&lt;li&gt;DroidCam&lt;/li&gt;
&lt;li&gt;Xournal++&lt;/li&gt;
&lt;li&gt;Soulseek&lt;/li&gt;
&lt;li&gt;WhoCrashed&lt;/li&gt;
&lt;li&gt;CrystalDiskMark 8&lt;/li&gt;
&lt;li&gt;Ventoy&lt;/li&gt;
&lt;li&gt;scrcpy&lt;/li&gt;
&lt;li&gt;TranslucentTB&lt;/li&gt;
&lt;li&gt;Avidemux&lt;/li&gt;
&lt;li&gt;Kdenlive&lt;/li&gt;
&lt;li&gt;mingw&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;htop&lt;/li&gt;
&lt;li&gt;zsh&lt;/li&gt;
&lt;li&gt;nvim&lt;/li&gt;
&lt;li&gt;dwm&lt;/li&gt;
&lt;li&gt;st&lt;/li&gt;
&lt;li&gt;dmenu&lt;/li&gt;
&lt;/ul&gt;
</description> 
    </item>
    
    <item>
      <title>rss feed!</title>
      <link>https://8amiul.github.io/posts/rss/</link>
      <pubDate>Fri, 10 Jan 2025 00:24:58 +0600</pubDate>
      
      <guid>https://8amiul.github.io/posts/rss/</guid>
      <description>&lt;p&gt;rss feed is like a magazine where you can link many favourite webpages which provides a rss.xml thing. So with that you can view all the main contents of those websites without visiting every site.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t know about rss feeds before building this site. I knew that icon on blog pages but never understood what actually rss was.&lt;/p&gt;
&lt;p&gt;Now my site also got a rss feed. Hugo, yes that&amp;rsquo;s what I used to generate this static site of mine. So hugo auto generates a rss.xml file that contains everything we need.&lt;/p&gt;
&lt;p&gt;But there was a problem at first. By default it wasn&amp;rsquo;t set up properly. On the rss reader my site wasn&amp;rsquo;t rendered correctly.&lt;/p&gt;
&lt;p&gt;Just to fix this I had to implement a code in hugo&amp;rsquo;s mytheme/layouts/_default/rss.xml. Well, I didn&amp;rsquo;t bother to understand that code.
It works for me, it doesn&amp;rsquo;t get executed in my system and once again it works for me.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gideonwolfe.com/posts/sysadmin/hugo/hugorss/&#34;&gt;Code can be found here!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I use &lt;a href=&#34;https://github.com/spacecowboy/Feeder&#34;&gt;feeder&lt;/a&gt; on my phone and on linux I use &lt;a href=&#34;https://github.com/newsboat/newsboat&#34;&gt;newsboat&lt;/a&gt; to view rss feeds.&lt;/p&gt;
</description> 
    </item>
    
    <item>
      <title>First meal of 2025</title>
      <link>https://8amiul.github.io/posts/first_meal_2025/</link>
      <pubDate>Wed, 01 Jan 2025 19:49:38 +0600</pubDate>
      
      <guid>https://8amiul.github.io/posts/first_meal_2025/</guid>
      <description>&lt;p&gt;I just cooked my first meal of this year. So it&amp;rsquo;s a new year and Today I woke up early.&lt;/p&gt;
&lt;p&gt;I just thought it&amp;rsquo;s better I try something new today. So why don&amp;rsquo;t I make my own breakfast?&lt;/p&gt;
&lt;p&gt;Noodles was the only food I knew how to cook. So I started cooking. I took  noodles, then egg and some veggies (actually left over salad from yesterday&amp;rsquo;s party).&lt;/p&gt;
&lt;p&gt;However it wasn&amp;rsquo;t cooked properly. But still it looked so good. But as I didn&amp;rsquo;t put salt or any other spices, it tasted&amp;hellip; okay. Not the best but one who starving will obviously eat.&lt;/p&gt;

    &lt;img class=&#34;post-center-image&#34; src=&#34;https://8amiul.github.io/images/noodles.jpg&#34; alt=&#34;[Noodles Image]&#34; title=&#34;Nooooodles&#34;&gt;

&lt;p&gt;I found it looking good. I wish I could make it more tasty. But I&amp;rsquo;ll try to make it any other day. Making my own breakfast was fun. But time consuming. It gives pleasure. We should try making our own food. Getting up early may also be another reason that made cooking breakfast so fun. The morning light and air is so so pure and refreshing. For me winter morning is the best!&lt;/p&gt;
</description> 
    </item>
    
    <item>
      <title>Goodlock</title>
      <link>https://8amiul.github.io/posts/goodlock/</link>
      <pubDate>Tue, 04 Jul 2023 14:14:53 +0600</pubDate>
      
      <guid>https://8amiul.github.io/posts/goodlock/</guid>
      <description>&lt;p&gt;My phone has One Ui 4.1 core. Which is crap! None of the GoodLock modules are supported on my phone. But with some tweaking we can achieve this feature. But the phone has to be rooted.&lt;/p&gt;
&lt;p&gt;Our First aim is to download the patched version of &lt;a href=&#34;https://downloads.corsicanu.ro/GoodLock/&#34; title=&#34;GoodLock&#34;&gt;GoodLock&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then we have to disable the apk signature verification check. Why do we need that? Just because those apk doesn&amp;rsquo;t come with any signature. But our system looks for one.
So that&amp;rsquo;s why.&lt;/p&gt;
&lt;p&gt;Now we have to install,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Riru magisk module&lt;/li&gt;
&lt;li&gt;Riru Lsposed&lt;/li&gt;
&lt;li&gt;core patch (which is a Lsposed module).
After this we will be able to install the program.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Installing it with the android package manager won&amp;rsquo;t work unfortunately. You need SAI or Split APKs Installer. You can find it in Google PlayStore. Use SAI to install the apk. Also don&amp;rsquo;t forget to set the installer mode to rooted mode.&lt;/p&gt;
&lt;p&gt;Enable Sign APKs option in SAI. If you&amp;rsquo;re lucky then you will be able to open those programs at first attempt.&lt;/p&gt;
&lt;p&gt;But if it shows &lt;code&gt;unsupported version&lt;/code&gt; then. You need to take some more steps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now we have to install Lucky Patcher.&lt;/li&gt;
&lt;li&gt;Then install Lucky Patcher module in Lsposed.&lt;/li&gt;
&lt;li&gt;Inside it go to Toolbox Patch to android&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There select first three options. Most probably they will be,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Signature verification status&lt;/li&gt;
&lt;li&gt;Disable signature verification&lt;/li&gt;
&lt;li&gt;Disable signature verification in the package manager&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first two of them will be selected by Lsposed. You just have to select the third one. Then click apply. Don&amp;rsquo;t forget to restart your phone lest you might not get to see the changes at first.&lt;/p&gt;
&lt;p&gt;After going through all of these steps I was able to install most of the GoodLock modules.&lt;/p&gt;
</description> 
    </item>
    
  </channel>
</rss>